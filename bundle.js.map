{"version":3,"sources":["webpack:///webpack/bootstrap 0bb4636f334fe981b759","webpack:///./app.js","webpack:///./game.js","webpack:///./prey.js","webpack:///./animal.js","webpack:///./options.js","webpack:///./predator.js","webpack:///./tile.js","webpack:///./game_view.js","webpack:///./board.js","webpack:///./util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACbD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,UAAU;AAC7B,gCAA+B,YAAY;AAC3C;;AAEA,oBAAmB,eAAe;AAClC,yCAAwC,YAAY;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE,sBAAsB;AACzF,yFAAwF,sBAAsB;AAC9G,oEAAmE,sBAAsB;AACzF,yFAAwF,sBAAsB;AAC9G;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA,gEAA+D,sBAAsB;AACrF,qFAAoF,sBAAsB;AAC1G,gEAA+D,sBAAsB;AACrF,qFAAoF,sBAAsB;AAC1G;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACxFA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B,qBAAqB;AACnD;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACPA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,SAAQ;AACR;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,uCAAuC;AAC1D,qBAAoB,uCAAuC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,4CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,8CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0bb4636f334fe981b759","const Game = require('./game');\nconst GameView = require('./game_view');\nconst Options = require('./options');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  canvas.width = Options.DIM_X;\n  canvas.height = Options.DIM_Y;\n\n  const ctx = canvas.getContext(\"2d\");\n  const game = new Game(7, 3);\n  const gameView = new GameView(game, ctx);\n  gameView.start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.js\n// module id = 0\n// module chunks = 0","const Prey = require('./prey');\nconst Predator = require('./predator');\nconst Options = require('./options');\nconst Board = require('./board');\n\nclass Game {\n  constructor(prey, predators) {\n    this.prey = [];\n    this.predators = [];\n    this.board = new Board();\n\n    this.addAnimals(prey, predators);\n  }\n\n  addAnimals(prey, predators) {\n    for (let i = 0; i < prey; i++) {\n      this.prey.push(new Prey({ game: this}));\n    }\n\n    for (let j = 0; j < predators; j++) {\n      this.predators.push(new Predator({ game: this}));\n    }\n  }\n\n  allObjects() {\n    return [this.board].concat(this.prey).concat(this.predators);\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Options.DIM_X, Options.DIM_Y);\n\n    this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n  }\n\n  updateObjects(ctx) {\n    this.allObjects().forEach( object =>\n      object.update(this.prey, this.predators) );\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game.js\n// module id = 1\n// module chunks = 0","const Animal = require(\"./animal\");\nconst Util = require(\"./util\");\nconst Options = require(\"./options\");\n\nclass Prey extends Animal {\n  constructor(options = {}) {\n    super(options);\n    this.speed = 3;\n    this.radius = 10;\n    this.color = \"#228B22\";\n  }\n\n  getMove(prey, predators) {\n    //Run from wolf if necessary\n    let closestDistance;\n    let closestPredator;\n    predators.forEach( predator => {\n      if (!predator.alive) { return; }\n      let distance = Util.calcDistance(predator.pos, this.pos);\n      if (!closestDistance || distance < closestDistance) {\n        closestDistance = distance;\n        closestPredator = predator;\n      }\n    });\n    //If wolf is close enough, run away\n    if (closestDistance <= 100) {\n      this.movement =\n        Util.escapeAngle(\n          this.pos,\n          closestPredator.pos,\n          closestPredator.movement);\n          if (this.pos[0] <= this.radius && this.movement[0] < 0) { this.movement[0] = 0; }\n          else if (this.pos[0] >= Options.DIM_X - this.radius && this.movement[0] > 0) { this.movement[0] = 0; }\n          if (this.pos[1] <= this.radius && this.movement[1] < 0) { this.movement[1] = 0; }\n          else if (this.pos[1] >= Options.DIM_Y - this.radius && this.movement[1] > 0) { this.movement[1] = 0; }\n      return;\n    } else {\n      //Else look for closest mate\n      closestDistance = null;\n      let closestMate;\n      prey.forEach( mate => {\n        if (mate === this || !mate.alive) {\n          return;\n        }\n        let distance = Util.calcDistance(mate.pos, this.pos);\n        if (!closestDistance || distance < closestDistance) {\n          closestDistance = distance;\n          closestMate = mate;\n        }\n      });\n\n      this.movement =\n        Util.pursuitAngle(this.pos, closestMate.pos, closestMate.movement);\n\n      //Prevent leaving screen\n      if (this.pos[0] <= this.radius && this.movement[0] < 0) { this.movement[0] = 0; }\n      else if (this.pos[0] >= Options.DIM_X - this.radius && this.movement[0] > 0) { this.movement[0] = 0; }\n      if (this.pos[1] <= this.radius && this.movement[1] < 0) { this.movement[1] = 0; }\n      else if (this.pos[1] >= Options.DIM_Y - this.radius && this.movement[1] > 0) { this.movement[1] = 0; }\n    }\n  }\n\n  eaten() {\n    this.death();\n    this.movement = [0, 0];\n    this.color = \"#000000\";\n  }\n\n  update(prey, predators) {\n    if (this.removed) { return; }\n    if (!this.alive) {\n      this.deathCounter();\n      return;\n    }\n\n    if (this.starved()) {\n      this.death();\n      return;\n    }\n\n    this.getMove(prey, predators);\n\n    //TODO Death Counter check, remove\n\n    this.move();\n  }\n}\n\nmodule.exports = Prey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./prey.js\n// module id = 2\n// module chunks = 0","const Options = require('./options');\n\nconst getRandomInt = size => Math.floor(Math.random() * size);\n\nclass Animal {\n  constructor(options) {\n    this.pos = [getRandomInt(Options.DIM_X), getRandomInt(Options.DIM_Y)];\n    this.food = 5;\n    this.alive = true;\n    this.removed = false;\n\n    this.onReproductionCooldown = false;\n    this.ReproductionCooldownCounter = 0;\n\n    //TODO Remove this\n    this.movement = [0, 0];\n  }\n\n  move() {\n    this.pos[0] += (this.movement[0] * this.speed);\n    this.pos[1] += (this.movement[1] * this.speed);\n  }\n\n  eat(val) {\n    this.food += val;\n  }\n\n  starved() {\n    return this.food === 0;\n  }\n\n  death() {\n    this.alive = false;\n    this.counter = 0;\n  }\n\n  deathCounter() {\n    this.counter += 1;\n    console.log(this.counter);\n    if (this.counter === 50) { this.removed = true; }\n  }\n\n  draw(ctx) {\n    if (this.removed) { return; }\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n}\n\nmodule.exports = Animal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./animal.js\n// module id = 3\n// module chunks = 0","const Options = {\n  DIM_X: 1000,\n  DIM_Y: 600,\n  TILE_SIZE: 20,\n  FPS: 32\n};\n\nmodule.exports = Options;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./options.js\n// module id = 4\n// module chunks = 0","const Animal = require(\"./animal\");\nconst Util = require('./util');\n\nclass Predator extends Animal {\n  constructor(options = {}) {\n    super(options);\n    this.speed = 3;\n    this.radius = 10;\n    this.color = \"#ff0000\";\n\n    this.prevMove = [0, 0];\n    this.destination = null;\n  }\n\n  eating() {\n\n  }\n\n  getMove(prey, predators) {\n    let closestDistance;\n    let closestAnimal;\n\n    prey.forEach( food => {\n      if (!food.alive) { return; }\n      let distance = Util.calcDistance(food.pos, this.pos);\n      if (!closestDistance || distance < closestDistance) {\n        closestDistance = distance;\n        closestAnimal = food;\n      }\n    });\n\n    if (closestDistance <= this.radius) {\n      console.log(\"Eat\");\n      this.eating();\n      closestAnimal.eaten();\n      this.movement = [0, 0];\n      return;\n    }\n\n    if (this.food > 1) {\n      //TODO adjust food as appropriate\n      predators.forEach( mate => {\n        if (mate === this || !mate.alive ) {\n          return;\n        }\n        let distance = Util.calcDistance(mate.pos, this.pos);\n        if (!closestDistance || distance < closestDistance) {\n          closestDistance = distance;\n          closestAnimal = mate;\n        }\n      });\n    }\n    //Get target's current position & movement\n\n    this.movement =\n      Util.pursuitAngle(this.pos, closestAnimal.pos, closestAnimal.movement);\n  }\n\n  update(prey, predators) {\n    if (this.removed) { return; }\n    if (this.starved()) {\n      this.death();\n      return;\n    }\n\n    if (!this.alive) {\n      this.deathCounter();\n    }\n    this.getMove(prey, predators);\n\n    //TODO Death Counter check, remove\n\n    this.move();\n  }\n\n  //AI on Deciding Move\n    //Sniff?\n    //Starving?\n\n  //Check if previous move is same direction as current\n\n}\n\nmodule.exports = Predator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./predator.js\n// module id = 5\n// module chunks = 0","class Tile {\n  constructor(pos, size) {\n    this.pos = pos;\n    this.tile_size = size;\n    this.grass = 15;\n    this.markedForUpdate = true;\n\n    this.startPos = [this.pos[0]*this.tile_size, this.pos[1]*this.tile_size];\n  }\n\n  getColor() {\n    return \"#d3d3d3\";\n    // if (this.grass === 0) {\n    //   return \"#ffcc99\";\n    // } else if (this.grass <= 10) {\n    //   return \"#ccff99\";\n    // } else if (this.grass <= 20) {\n    //   return \"#00ff00\";\n    // } else if (this.grass <= 30) {\n    //   return \"#006600\";\n    // }\n  }\n\n  eaten() {\n    this.grass -= 10;\n    if (this.grass < 0) {\n      this.grass = 0;\n    }\n  }\n\n  grow() {\n    if (this.grass < 30) this.grass += 1;\n    if (this.grass === 10 || this.grass === 20) {\n      this.markedForUpdate = true;\n    }\n  }\n\n  update() {\n    this.grow();\n  }\n}\n\nmodule.exports = Tile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./tile.js\n// module id = 6\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.gameOver = false;\n\n    this.game.draw(this.ctx);\n    // this.start();\n  }\n\n  start() {\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate() {\n    this.game.updateObjects();\n    this.game.draw(this.ctx);\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game_view.js\n// module id = 7\n// module chunks = 0","const Tile = require('./tile');\nconst Options = require('./options');\n\nclass Board {\n  constructor() {\n    this.tiles = [];\n\n    this.createTiles(0);\n  }\n\n  createTiles() {\n    for (let i = 0; i < Options.DIM_X / Options.TILE_SIZE; i++) {\n      for(let j = 0; j < Options.DIM_Y / Options.TILE_SIZE; j++) {\n        this.tiles.push(new Tile([i, j], Options.TILE_SIZE));\n      }\n    }\n  }\n\n  draw(ctx) {\n    this.tiles.forEach( tile => {\n      ctx.fillStyle = tile.getColor();\n      ctx.fillRect(tile.startPos[0], tile.startPos[1], Options.TILE_SIZE -1, Options.TILE_SIZE - 1);\n    });\n  }\n\n  update() {\n    this.tiles.forEach( tile => tile.update() );\n  }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./board.js\n// module id = 8\n// module chunks = 0","const Util = {\n  calcDistance: (pos1, pos2) => {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  pursuitAngle: (startPos, targetPos, targetMove) => {\n    if (targetPos[1] - startPos[1] === 0) { return [1, 0]; }\n    const ratio = (targetPos[0] - startPos[0])/(targetPos[1] - startPos[1]);\n    let yVal = Math.sqrt(1 / (Math.pow(ratio, 2) + 1));\n    if (targetPos[1] - startPos[1] < 0) {\n      yVal = yVal * (-1);\n    }\n    const xVal = ratio * yVal;\n    return [xVal, yVal];\n  },\n  escapeAngle: (startPos, predatorPos, targetMove) => {\n    if (predatorPos[1] - startPos[1] === 0) { return [1, 0]; }\n    const ratio = (predatorPos[0] - startPos[0])/(predatorPos[1] - startPos[1]);\n    let yVal = Math.sqrt(1 / (Math.pow(ratio, 2) + 1));\n    if (predatorPos[1] - startPos[1] > 0) {\n      yVal = yVal * (-1);\n    }\n    const xVal = ratio * yVal;\n    return [xVal, yVal];\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./util.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}